<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.csu.bakery.persistence.AccountDao">
    <insert id="insertEmailAccount">
        INSERT INTO account (username,password,email) VALUES (#{username},#{password},#{email})
    </insert>

    <insert id="insertGithubAccount" parameterType="Account" useGeneratedKeys="true" keyProperty="userid">
        INSERT INTO account (username,email) VALUES (#{username},#{email})
    </insert>

    <insert id="insertGithub">
        INSERT INTO github_account (userid,github_id,github_login) VALUES (#{userid},#{github_id},#{github_login})
    </insert>

    <select id="searchGithubAccount" resultType="Account">
        SELECT * FROM account a
        JOIN github_account g ON a.userid=g.userid
        WHERE g.github_id = #{github_id}
    </select>

    <select id="login" parameterType="String" resultType="Account">
        SELECT * FROM account WHERE email = #{email} AND password = #{password}
    </select>

    <select id="getAccount" parameterType="Account" resultType="Account">
        SELECT * FROM account WHERE userid = #{userid}
    </select>

    <select id="getAccountById" parameterType="Long" resultType="Account">
        SELECT * FROM account WHERE userid = #{userid}
    </select>

    <select id="getAccountByEmail" parameterType="String" resultType="Account">
        SELECT * FROM account WHERE email = #{email}
    </select>

    <update id="updateAccount" parameterType="Account">
        UPDATE account
        SET
            username = #{username},
            phone = #{phone},
            gender = #{gender},
            age = #{age},
            addr1 = #{addr1},
            addr2 = #{addr2},
            avatar_url = #{avatar_url}
            WHERE userid = #{userid}
    </update>

    <update id="resetEmail">
        UPDATE account
        SET email = #{newEmail}
        WHERE userid = #{userid}
    </update>

    <update id="resetPassword">
        UPDATE account
        SET password = #{newPassword}
        WHERE userid = #{userid}
    </update>

    <update id="updateAccountVIP" parameterType="Account">
        UPDATE account
        SET VIPLevel= #{VIPLevel}
        WHERE userid = #{userid}
    </update>

    <update id="setAvatar">
        UPDATE account
        SET avatar_url= #{avatar_url}
        WHERE userid = #{userid}
    </update>

    <update id="setLoginType">
        UPDATE account
        SET login_type= #{login_type}
        WHERE userid = #{userid}
    </update>

    <update id="updateTokenVersion">
        UPDATE account
        SET token_version= #{token_version}
        WHERE userid = #{userid}
    </update>
</mapper>
